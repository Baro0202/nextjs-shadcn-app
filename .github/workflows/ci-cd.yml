name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "yarn"

      - name: Print environment info
        run: |
          echo "Node version: $(node -v)"
          echo "Yarn version: $(yarn -v)"
          echo "Git commit: $(git rev-parse HEAD)"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: List installed packages
        run: yarn list --depth=0

      - name: Lint check
        id: lint
        run: |
          echo "Running lint check..."
          yarn lint --max-warnings=0 || (echo "::warning::Linting failed but continuing" && true)

      - name: Type check
        id: typecheck
        run: |
          echo "Running type check..."
          yarn typecheck || (echo "::warning::Type checking failed but continuing" && true)

      - name: Build application
        run: |
          echo "Building application..."
          yarn build
          echo "Build completed successfully"

      - name: List build output
        run: |
          echo "Build output files:"
          ls -la .next

      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: .next
          key: ${{ runner.os }}-nextjs-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "* Node version: $(node -v)" >> $GITHUB_STEP_SUMMARY
          echo "* Build completed: $(date)" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "yarn"

      - name: Print environment info
        run: |
          echo "Node version: $(node -v)"
          echo "Yarn version: $(yarn -v)"
          echo "Git commit: $(git rev-parse HEAD)"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Restore build cache
        uses: actions/cache@v3
        id: cache-restore
        with:
          path: .next
          key: ${{ runner.os }}-nextjs-${{ github.sha }}

      - name: Verify cache restored
        run: |
          if [ -d ".next" ]; then
            echo "Build cache restored successfully"
            ls -la .next
          else
            echo "::error::Build cache not restored properly"
            exit 1
          fi

      - name: Deploy summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "* Deployment prepared: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "* Environment: Production" >> $GITHUB_STEP_SUMMARY

      # Vercel deployment example (uncomment and configure if using Vercel)
      # - name: Deploy to Vercel
      #   uses: amondnet/vercel-action@v20
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     vercel-args: '--prod'

      # Netlify deployment example (uncomment and configure if using Netlify)
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v1.2
      #   with:
      #     publish-dir: '.next'
      #     production-branch: main
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  docker-build:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-shadcn-app:latest,${{ secrets.DOCKERHUB_USERNAME }}/nextjs-shadcn-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker build summary
        run: |
          echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "* Image: ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-shadcn-app:latest" >> $GITHUB_STEP_SUMMARY
          echo "* Image with SHA: ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-shadcn-app:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "* Built and pushed at: $(date)" >> $GITHUB_STEP_SUMMARY
